
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples/plot_c_plant.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_examples_plot_c_plant.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_plot_c_plant.py:


=============
Planting PSFs
=============
Planting a PSF with st_phot.

.. GENERATED FROM PYTHON SOURCE LINES 9-12

An example JWST Dataset is downloaded, and then we plant a 
psf. This is public HST data for the
gravitationally lensed SN 2022riv

.. GENERATED FROM PYTHON SOURCE LINES 12-30

.. code-block:: default

   

    import sys,os,glob
    from astropy.io import fits
    from astropy.table import Table
    from astropy.nddata import extract_array
    from astropy.coordinates import SkyCoord
    from astropy import wcs
    from astropy.wcs.utils import skycoord_to_pixel
    from astropy import units as u
    import numpy as np
    import matplotlib.pyplot as plt
    from astroquery.mast import Observations
    from astropy.visualization import (simple_norm,LinearStretch)

    import st_phot









.. GENERATED FROM PYTHON SOURCE LINES 31-35

**Download some Data**

For this example we download JWST cal images from MAST. We just use
1 of the 8 dithered exposures for speed here.

.. GENERATED FROM PYTHON SOURCE LINES 36-43

.. code-block:: default

    obs_table = Observations.query_criteria(obs_id='jw02767-o002_t001_nircam_clear-f150w')
    data_products_by_obs = Observations.get_product_list(obs_table)
    data_products_by_obs = data_products_by_obs[data_products_by_obs['obs_id']=='jw02767002001_02103_00001_nrcb3']
    data_products_by_obs = data_products_by_obs[data_products_by_obs['calib_level']==2]
    data_products_by_obs = data_products_by_obs[data_products_by_obs['productSubGroupDescription']=='CAL']
    Observations.download_products(data_products_by_obs,extension='fits')





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    INFO: Found cached file ./mastDownload/JWST/jw02767002001_02103_00001_nrcb3/jw02767002001_02103_00001_nrcb3_cal.fits with expected size 117538560. [astroquery.query]


.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <div><i>Table length=1</i>
    <table id="table140429608239840" class="table-striped table-bordered table-condensed">
    <thead><tr><th>Local Path</th><th>Status</th><th>Message</th><th>URL</th></tr></thead>
    <thead><tr><th>str92</th><th>str8</th><th>object</th><th>object</th></tr></thead>
    <tr><td>./mastDownload/JWST/jw02767002001_02103_00001_nrcb3/jw02767002001_02103_00001_nrcb3_cal.fits</td><td>COMPLETE</td><td>None</td><td>None</td></tr>
    </table></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-52

**Get the PSF model**

st_phot uses WebbPSF models for JWST. This can be pretty slow, 
so you don't want to run this every time. Either create your
own repository of these and pass each one when needed directly to
the psf_photometry function, or else at least just do this once,
save the ouptut, and then read it in and proceed to photometry
for testing purposes.

.. GENERATED FROM PYTHON SOURCE LINES 52-62

.. code-block:: default


    files = glob.glob('mastDownload/JWST/jw02767002001_02103_00001_nrcb3/*cal.fits')
    print(files)
    plant_location = SkyCoord('21:29:42.4104','+0:04:53.253',unit=(u.hourangle,u.deg))
    jwst_obs = st_phot.observation(files)
    psfs = st_phot.get_jwst_psf(jwst_obs,plant_location,num_psfs=4)
    plt.imshow(extract_array(psfs[0].data,(9,9),(psfs[0].data.shape[0]/2,
        psfs[0].data.shape[1]/2)))
    plt.show()




.. image-sg:: /examples/images/sphx_glr_plot_c_plant_001.png
   :alt: plot c plant
   :srcset: /examples/images/sphx_glr_plot_c_plant_001.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    ['mastDownload/JWST/jw02767002001_02103_00001_nrcb3/jw02767002001_02103_00001_nrcb3_cal.fits']
    /Users/jpierel/miniconda3/envs/tweakreg/lib/python3.10/site-packages/astropy/wcs/wcs.py:725: FITSFixedWarning: 'datfix' made the change 'Set DATE-BEG to '2022-10-06T10:18:17.568' from MJD-BEG.
    Set DATE-AVG to '2022-10-06T10:23:39.671' from MJD-AVG.
    Set DATE-END to '2022-10-06T10:29:01.774' from MJD-END'.
      warnings.warn(
    /Users/jpierel/miniconda3/envs/tweakreg/lib/python3.10/site-packages/astropy/wcs/wcs.py:725: FITSFixedWarning: 'obsfix' made the change 'Set OBSGEO-L to     4.936334 from OBSGEO-[XYZ].
    Set OBSGEO-B to    20.544618 from OBSGEO-[XYZ].
    Set OBSGEO-H to 1233352579.016 from OBSGEO-[XYZ]'.
      warnings.warn(

    Running instrument: NIRCam, filter: F150W
      Running detector: NRCB3
        Position 1/4: (0, 0) pixels
        Position 1/4 centroid: (201.473112109223, 200.72440539884693)
        Position 2/4: (0, 2047) pixels
        Position 2/4 centroid: (201.7463744998794, 200.78239485839993)
        Position 3/4: (2047, 0) pixels
        Position 3/4 centroid: (201.46082149906897, 201.18357167071326)
        Position 4/4: (2047, 2047) pixels
        Position 4/4 centroid: (201.81556997259125, 201.1599927062982)




.. GENERATED FROM PYTHON SOURCE LINES 63-66

**Examine the first Image**

You can see we've chosen a region of the image with no sources.

.. GENERATED FROM PYTHON SOURCE LINES 66-80

.. code-block:: default


    plant_image = files[0]
    plant_fits = fits.open(plant_image)
    plant_data = fits.open(plant_image)['SCI',1].data

    plant_y,plant_x = skycoord_to_pixel(plant_location,wcs.WCS(plant_fits['SCI',1],plant_fits))
    plant_cutout = extract_array(plant_data,(9,9),(plant_x,plant_y))
    plt.imshow(plant_cutout, origin='lower')

    plt.gca().tick_params(labelcolor='none',axis='both',color='none')
    plt.show()






.. image-sg:: /examples/images/sphx_glr_plot_c_plant_002.png
   :alt: plot c plant
   :srcset: /examples/images/sphx_glr_plot_c_plant_002.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    /Users/jpierel/miniconda3/envs/tweakreg/lib/python3.10/site-packages/astropy/wcs/wcs.py:725: FITSFixedWarning: 'datfix' made the change 'Set DATE-BEG to '2022-10-06T10:18:17.568' from MJD-BEG.
    Set DATE-AVG to '2022-10-06T10:23:39.671' from MJD-AVG.
    Set DATE-END to '2022-10-06T10:29:01.774' from MJD-END'.
      warnings.warn(
    /Users/jpierel/miniconda3/envs/tweakreg/lib/python3.10/site-packages/astropy/wcs/wcs.py:725: FITSFixedWarning: 'obsfix' made the change 'Set OBSGEO-L to     4.936334 from OBSGEO-[XYZ].
    Set OBSGEO-B to    20.544618 from OBSGEO-[XYZ].
    Set OBSGEO-H to 1233352579.016 from OBSGEO-[XYZ]'.
      warnings.warn(




.. GENERATED FROM PYTHON SOURCE LINES 81-83

**Plant the PSF**


.. GENERATED FROM PYTHON SOURCE LINES 83-100

.. code-block:: default


    jwst_obs.plant_psf(psfs[0],[[plant_x,plant_y]],26)
    planted_image = plant_image.replace('.fits','_plant.fits')
    planted_data = fits.open(planted_image)['SCI',1].data
    planted_cutout = extract_array(planted_data,(9,9),(plant_x,plant_y))

    fig,axes = plt.subplots(1,2)
    axes[0].imshow(plant_cutout, origin='lower')
    axes[0].set_title('Pre-Plant')
    axes[1].imshow(planted_cutout, origin='lower')
    axes[1].set_title('Post-Plant')

    for i in range(2):
        axes[i].tick_params(labelcolor='none',axis='both',color='none')
    plt.show()





.. image-sg:: /examples/images/sphx_glr_plot_c_plant_003.png
   :alt: Pre-Plant, Post-Plant
   :srcset: /examples/images/sphx_glr_plot_c_plant_003.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 101-103

**Measure PSF photometry and Aperture photometry for the source**


.. GENERATED FROM PYTHON SOURCE LINES 103-121

.. code-block:: default

    jwst_obs = st_phot.observation(glob.glob('mastDownload/JWST/jw02767002001_02103_00001_nrcb3/*plant.fits')
    )

    jwst_obs.psf_photometry(psfs,plant_location,bounds={'flux':[-3000,100],
                            'centroid':[-1,1],
                            'bkg':[0,50]},
                            fit_width=5,
                            fit_bkg=True,
                            fit_flux='single')
    jwst_obs.plot_psf_fit()
    plt.show()

    jwst_obs.plot_psf_posterior(minweight=.0005)
    plt.show()

    print('PSF Mag:',float(jwst_obs.psf_result.phot_cal_table['mag']))

    jwst_obs.aperture_photometry(plant_location,encircled_energy='50')
    print('Aperture Mag:',float(jwst_obs.aperture_result.phot_cal_table['mag']))


.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /examples/images/sphx_glr_plot_c_plant_004.png
         :alt: Data, Model, Residual
         :srcset: /examples/images/sphx_glr_plot_c_plant_004.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /examples/images/sphx_glr_plot_c_plant_005.png
         :alt: flux = ${5.54}_{-0.12}^{+0.15}$, x0 = ${1834.49}_{-0.02}^{+0.02}$, y0 = ${149.25}_{-0.02}^{+0.02}$, bkg = ${0.26}_{-0.01}^{+0.01}$
         :srcset: /examples/images/sphx_glr_plot_c_plant_005.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    /Users/jpierel/miniconda3/envs/tweakreg/lib/python3.10/site-packages/astropy/wcs/wcs.py:725: FITSFixedWarning: 'datfix' made the change 'Set DATE-BEG to '2022-10-06T10:18:17.568' from MJD-BEG.
    Set DATE-AVG to '2022-10-06T10:23:39.671' from MJD-AVG.
    Set DATE-END to '2022-10-06T10:29:01.774' from MJD-END'.
      warnings.warn(
    /Users/jpierel/miniconda3/envs/tweakreg/lib/python3.10/site-packages/astropy/wcs/wcs.py:725: FITSFixedWarning: 'obsfix' made the change 'Set OBSGEO-L to     4.936334 from OBSGEO-[XYZ].
    Set OBSGEO-B to    20.544618 from OBSGEO-[XYZ].
    Set OBSGEO-H to 1233352579.016 from OBSGEO-[XYZ]'.
      warnings.warn(
    Finished PSF psf_photometry with median residuals of 2.59%
    PSF Mag: 25.975240433351242
    Aperture Mag: 26.02872023857849





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  38.845 seconds)


.. _sphx_glr_download_examples_plot_c_plant.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_c_plant.py <plot_c_plant.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_c_plant.ipynb <plot_c_plant.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
